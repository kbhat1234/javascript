#  git version
git --version
'''
Output:
git version 2.26.0.windows.1
'''

# setting username
git config --global user.name "kbhat1234"
git config user.name
'''
Output:
kbhat1234
'''

# setting user email id
git config --global user.email "karthikbhat@live.com"
git config user.email
'''
Output:
karthikbhat@live.com
'''

# avoid merge commits for pull
git config --global branch.autosetuprebase always
git config branch.autosetuprebase
'''
Output:
always
'''

# color highlighting
git config --global color.ui true
git config --global color.status auto
git config --global color.branch auto

git config color.ui
'''
Output:
true
'''

git config color.status
'''
Output:
auto
'''

git config color.branch
'''
Output:
auto
'''

# Setting default editor
git config --global core.editor vim
git config core.editor
'''
Output:
vim
'''

# setting default merge tool
git config --global merge.tool vimdiff
git config merge.tool
'''
Output:
vimdiff
'''

# listing git config settings
git config --list
'''
Output:
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
core.editor=nano.exe
credential.helper=manager
user.name=kbhat1234
user.email=karthikbhat@live.com
color.ui=true
color.status=auto
color.branch=auto
core.editor=vim
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
remote.origin.url=https://github.com/kbhat1234/python_3.8.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.local.remote=origin
branch.local.merge=refs/heads/local
branch.master.remote=origin
branch.master.merge=refs/heads/master
'''

# removing an entry from global config for variable defined in config
git config --global --unset core.excludesfile
git config --list
'''
Output:
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
core.editor=nano.exe
credential.helper=manager
user.name=kbhat1234
user.email=karthikbhat@live.com
color.ui=true
color.status=auto
color.branch=auto
core.editor=vim
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
remote.origin.url=https://github.com/kbhat1234/python_3.8.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.local.remote=origin
branch.local.merge=refs/heads/local
branch.master.remote=origin
branch.master.merge=refs/heads/master
'''

# git initialization
git init
'''
Output:
Reinitialized existing Git repository in C:/Users/karth/PycharmProjects/PythonPackage/Programs/.git/
'''

# link the local repository to an empty GitHub repository
# git remote add origin [url]
git remote add origin https://github.com/kbhat1234/python_3.8.git
git config remote.origin.url
'''
Output:
remote.origin.url=https://github.com/kbhat1234/python_3.8.git
'''
git config remote.origin.fetch
'''
Output:
+refs/heads/*:refs/remotes/origin/*
'''

# link the local repository to an empty GitHub repository
git remote add destination https://github.com/kbhat1234/shell-script.git
git config remote.destination.url
git config remote.destination.fetch
'''
Output:
https://github.com/kbhat1234/shell-script.git
+refs/heads/*:refs/remotes/destination/*
'''

# view the current remotes
git remote -v
'''
Output:
destination     https://github.com/kbhat1234/shell-script.git (fetch)
destination     https://github.com/kbhat1234/shell-script.git (push)
origin  https://github.com/kbhat1234/python_3.8.git (fetch)
origin  https://github.com/kbhat1234/python_3.8.git (push)
''''

# Remove remote
git remote rm destination
git remote -v
'''
Output:
origin  https://github.com/kbhat1234/python_3.8.git (fetch)
origin  https://github.com/kbhat1234/python_3.8.git (push)
'''

# git clone [url]
git clone git https://github.com/kbhat1234/RESTAPI.git
'''
Output:
Cloning into 'RESTAPI'...
remote: Enumerating objects: 479, done.
remote: Total 479 (delta 0), reused 0 (delta 0), pack-reused 479
Receiving objects: 100% (479/479), 77.35 KiB | 286.00 KiB/s, done.
Resolving deltas: 100% (194/194), done.
'''

vi a1.txt # modify some contents to the already synced file
touch a2.txt # add a new file on the local working directory

# status to know which branch, which files are modified, new, deleted, etc.
git status
'''
Output:
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   a1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        a2.txt

no changes added to commit (use "git add" and/or "git commit -a")
'''

# to know code branches on your local working directory
git branch
'''
Output:
  local1.0
* master
'''

# create a new branch with name
# git branch [branch_name]
git branch version2.0

git branch
'''
Output:
  local1.0
* master
  version2.0
'''

# switching between one branch of version of code to another
# git checkout [branch_name]
git checkout version2.0
'''
Output:
Switched to branch 'version2.0'
M       a1.txt  # M followed with file name a1.txt is modified, already synced with git repo before
'''

# before deleting the branch version2.0
git branch
'''
Output:
  master
* version2.0
'''

# delete the created branch from local
# git branch -D [branch_name]
git branch -D version2.0
'''
Output:
Deleted branch version2.0 (was 0ffd94f).
'''

# after delete of branch
git branch
'''
Output:
* master
'''

'''merging 2 branches locally and pushing to remote repositories
git merge [branch1] [branch2]
checkout to local repository branch "local"
make some changes to gitcommands.txt
commit the changes to local
then push to remote repository branch "origin/local"
checkout to master, merge with local and then push to "origin/master"
'''

git status
'''
Output:
On branch local
Your branch is up to date with 'origin/local'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   gitcommands.txt

no changes added to commit (use "git add" and/or "git commit -a")
'''

git commit -a -m "adding some more commands to gitcommands.txt"
'''
Output:
[local dad0fdf] modifying gitcommands.txt
 1 file changed, 32 insertions(+), 2 deletions(-)
'''

# changes pushed to remote repository origin/local
git push origin local
'''
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 641 bytes | 641.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/kbhat1234/python_3.8.git
   5e527e1..dad0fdf  local -> local

'''

git checkout master
'''
Output:
Switched to branch 'master'
Your branch is up to date with 'origin/master'.
'''
# merge master branch with local updated branch

git merge master local
'''
Output:
Updating 5e527e1..4d2076a
Fast-forward
 Git Commands/gitcommands.txt | 57 ++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 55 insertions(+), 2 deletions(-)
'''

# lists version history of the current branch - local/master
git log
'''
Output:
commit 66c45478a4610b79a57f18c4a564fc2bc7898db0 (HEAD -> local, origin/local)
Author: kbhat1234 <karthikbhat@live.com>
Date:   Thu Apr 16 09:41:44 2020 +0530

    merge commands

commit d0ad4143844a6ccc968d0d7eb1c867dfddff3d55
Author: kbhat1234 <karthikbhat@live.com>
Date:   Thu Apr 16 09:40:32 2020 +0530

    add
'''

# lists version history for a file, including renames
# git log --follow [file]
git log --follow gitcommands.txt
'''
Output:
commit 66c45478a4610b79a57f18c4a564fc2bc7898db0 (HEAD -> local, origin/local)
Author: kbhat1234 <karthikbhat@live.com>
Date:   Thu Apr 16 09:41:44 2020 +0530

    merge commands

commit d0ad4143844a6ccc968d0d7eb1c867dfddff3d55
Author: kbhat1234 <karthikbhat@live.com>
Date:   Thu Apr 16 09:40:32 2020 +0530

    add

commit 9ca0636275551f68978d355e9ba9b0dd1705c466
Author: kbhat1234 <karthikbhat@live.com>
Date:   Thu Apr 16 09:31:36 2020 +0530

    merge commands
'''

# git diff [1st-branch] [2nd-branch] difference betweeen 2 branches
git diff local master
'''
Output:
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
index 314f02b..0000000
--- a/.gitignore
+++ /dev/null
@@ -1 +0,0 @@
-*.txt
\ No newline at end of file
diff --git a/Git Commands/gitcommands.txt b/Git Commands/gitcommands.txt
index a663fa5..7492273 100644
--- a/Git Commands/gitcommands.txt
+++ b/Git Commands/gitcommands.txt
@@ -297,4 +297,7 @@ Updating 5e527e1..4d2076a
 Fast-forward
  Git Commands/gitcommands.txt | 57 ++++++++++++++++++++++++++++++++++++++++++--
  1 file changed, 55 insertions(+), 2 deletions(-)
-'''
\ No newline at end of file
+'''
+
+
+
'''

# outputs metadata and content changes of the specified commit
# git show [commit]
#git show 4d2076a89ada77797e5875c9f1
'''
Output:
commit 4d2076a89ada77797e5875c9f1e48a7cd2f2c040
Author: kbhat1234 <karthikbhat@live.com>
Date:   Thu Apr 16 08:40:25 2020 +0530

    add

diff --git a/Git Commands/gitcommands.txt b/Git Commands/gitcommands.txt
index cb51965..a1cfde8 100644
--- a/Git Commands/gitcommands.txt
+++ b/Git Commands/gitcommands.txt
@@ -285,10 +285,8 @@ To https://github.com/kbhat1234/python_3.8.git
 git checkout master
 '''
 Output:
-error: Your local changes to the following files would be overwritten by checkout:
-        Git Commands/gitcommands.txt
-Please commit your changes or stash them before you switch branches.
-Aborting
+Switched to branch 'master'
+Your branch is up to date with 'origin/master'.
 '''

 git merge master local
'''

# Snapshots the file in preparation for versioning
# git add [file]
# git add .
git add abc1.txt
git status
'''
Output:
On branch local
Your branch is up to date with 'origin/local'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   Git Commands/gitcommands.txt

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   Git Commands/gitcommands.txt
'''

# Records file snapshots permanently in version history
# git commit -a -m "[add descriptive commit message]"
git commit -a -m "add files"
'''
Output:
[local 85461d0] add
 1 file changed, 162 insertions(+), 1 deletion(-)
'''

# synchronize changes - fetch, merge, push, pull
# fetch/download all the history of the remote tracking branch
# git fetch [url]
# git fetch origin
git fetch https://github.com/kbhat1234/python_3.8.git
'''
Output:
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 676 bytes | 5.00 KiB/s, done.
From https://github.com/kbhat1234/python_3.8
   cd71d28..2cddd67  master     -> origin/master
---------------------------------------------------------------------
From https://github.com/kbhat1234/python_3.8
 * branch            HEAD       -> FETCH_HEAD
'''

# merging 2 or more remotely tracking branch
# checkout to local branch using git checkout [branchname]
git checkout local
# modify the file gitcommands.txt with adding some more lines of code
# after modify add/commit the changes
git commit -a -m "commit the changes"


# push the changes from local repository branch to remote repository local branch
